/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.OrderAddOrderItemInnerOrderItemOptionInner
import org.openapitools.client.models.OrderAddOrderItemInnerOrderItemPropertyInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param orderItemId Defines orders specified by order item id
 * @param orderItemName Defines orders specified by order item name
 * @param orderItemPrice Defines orders specified by order item price
 * @param orderItemQuantity Defines orders specified by order item quantity
 * @param orderItemModel Defines orders specified by order item model
 * @param orderItemWeight Defines orders specified by order item weight
 * @param orderItemVariantId Ordered product variant. Where x is order item ID
 * @param orderItemTax Percentage of tax for product order
 * @param orderItemParent Index of the parent grouped/bundle product
 * @param orderItemParentOptionName Option name of the parent grouped/bundle product
 * @param orderItemAllowRefundItemsSeparately Indicates whether subitems of the grouped/bundle product can be refunded separately
 * @param orderItemAllowShipItemsSeparately Indicates whether subitems of the grouped/bundle product can be shipped separately
 * @param orderItemPriceIncludesTax Defines if item price includes tax
 * @param orderItemOption 
 * @param orderItemProperty 
 */


data class OrderAddOrderItemInner (

    /* Defines orders specified by order item id */
    @Json(name = "order_item_id")
    val orderItemId: kotlin.String,

    /* Defines orders specified by order item name */
    @Json(name = "order_item_name")
    val orderItemName: kotlin.String,

    /* Defines orders specified by order item price */
    @Json(name = "order_item_price")
    val orderItemPrice: java.math.BigDecimal,

    /* Defines orders specified by order item quantity */
    @Json(name = "order_item_quantity")
    val orderItemQuantity: kotlin.Int,

    /* Defines orders specified by order item model */
    @Json(name = "order_item_model")
    val orderItemModel: kotlin.String? = null,

    /* Defines orders specified by order item weight */
    @Json(name = "order_item_weight")
    val orderItemWeight: java.math.BigDecimal? = null,

    /* Ordered product variant. Where x is order item ID */
    @Json(name = "order_item_variant_id")
    val orderItemVariantId: kotlin.String? = null,

    /* Percentage of tax for product order */
    @Json(name = "order_item_tax")
    val orderItemTax: java.math.BigDecimal? = java.math.BigDecimal("0"),

    /* Index of the parent grouped/bundle product */
    @Json(name = "order_item_parent")
    val orderItemParent: kotlin.Int? = null,

    /* Option name of the parent grouped/bundle product */
    @Json(name = "order_item_parent_option_name")
    val orderItemParentOptionName: kotlin.String? = null,

    /* Indicates whether subitems of the grouped/bundle product can be refunded separately */
    @Json(name = "order_item_allow_refund_items_separately")
    val orderItemAllowRefundItemsSeparately: kotlin.Boolean? = null,

    /* Indicates whether subitems of the grouped/bundle product can be shipped separately */
    @Json(name = "order_item_allow_ship_items_separately")
    val orderItemAllowShipItemsSeparately: kotlin.Boolean? = null,

    /* Defines if item price includes tax */
    @Json(name = "order_item_price_includes_tax")
    val orderItemPriceIncludesTax: kotlin.Boolean? = false,

    @Json(name = "order_item_option")
    val orderItemOption: kotlin.collections.List<OrderAddOrderItemInnerOrderItemOptionInner>? = null,

    @Json(name = "order_item_property")
    val orderItemProperty: kotlin.collections.List<OrderAddOrderItemInnerOrderItemPropertyInner>? = null

) {


}

