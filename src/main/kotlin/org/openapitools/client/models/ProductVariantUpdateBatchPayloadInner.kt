/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ProductAddBatchPayloadInnerImagesInner
import org.openapitools.client.models.ProductUpdateBatchPayloadInnerAdvancedPricesInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param productId 
 * @param name 
 * @param description 
 * @param shortDescription 
 * @param sku 
 * @param upc 
 * @param mpn 
 * @param gtin 
 * @param isbn 
 * @param status 
 * @param price 
 * @param specialPrice 
 * @param costPrice 
 * @param retailPrice 
 * @param advancedPrices If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
 * @param quantity 
 * @param reserveQuantity 
 * @param increaseQuantity 
 * @param reduceQuantity 
 * @param warehouseId 
 * @param manufacturerId 
 * @param weight 
 * @param height 
 * @param length 
 * @param width 
 * @param storeId 
 * @param langId 
 * @param taxClassId 
 * @param backorderStatus 
 * @param visible 
 * @param isDefault 
 * @param inStock 
 * @param isVirtual 
 * @param downloadable 
 * @param manageStock 
 * @param isFreeShipping 
 * @param seoUrl 
 * @param metaTitle 
 * @param metaDescription 
 * @param metaKeywords 
 * @param categoriesIds If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
 * @param storesIds 
 * @param images The passed items will completely replace the original items
 * @param productImagesIds 
 * @param relatedProductsIds If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
 * @param upSellProductsIds If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
 * @param crossSellProductsIds If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
 */


data class ProductVariantUpdateBatchPayloadInner (

    @Json(name = "id")
    val id: kotlin.String,

    @Json(name = "product_id")
    val productId: kotlin.String,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "short_description")
    val shortDescription: kotlin.String? = null,

    @Json(name = "sku")
    val sku: kotlin.String? = null,

    @Json(name = "upc")
    val upc: kotlin.String? = null,

    @Json(name = "mpn")
    val mpn: kotlin.String? = null,

    @Json(name = "gtin")
    val gtin: kotlin.String? = null,

    @Json(name = "isbn")
    val isbn: kotlin.String? = null,

    @Json(name = "status")
    val status: kotlin.String? = null,

    @Json(name = "price")
    val price: java.math.BigDecimal? = null,

    @Json(name = "special_price")
    val specialPrice: java.math.BigDecimal? = null,

    @Json(name = "cost_price")
    val costPrice: java.math.BigDecimal? = null,

    @Json(name = "retail_price")
    val retailPrice: java.math.BigDecimal? = null,

    /* If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'. */
    @Json(name = "advanced_prices")
    val advancedPrices: kotlin.collections.List<ProductUpdateBatchPayloadInnerAdvancedPricesInner>? = null,

    @Json(name = "quantity")
    val quantity: java.math.BigDecimal? = null,

    @Json(name = "reserve_quantity")
    val reserveQuantity: java.math.BigDecimal? = null,

    @Json(name = "increase_quantity")
    val increaseQuantity: java.math.BigDecimal? = null,

    @Json(name = "reduce_quantity")
    val reduceQuantity: java.math.BigDecimal? = null,

    @Json(name = "warehouse_id")
    val warehouseId: kotlin.String? = null,

    @Json(name = "manufacturer_id")
    val manufacturerId: kotlin.String? = null,

    @Json(name = "weight")
    val weight: java.math.BigDecimal? = null,

    @Json(name = "height")
    val height: java.math.BigDecimal? = null,

    @Json(name = "length")
    val length: java.math.BigDecimal? = null,

    @Json(name = "width")
    val width: java.math.BigDecimal? = null,

    @Json(name = "store_id")
    val storeId: kotlin.String? = null,

    @Json(name = "lang_id")
    val langId: kotlin.String? = null,

    @Json(name = "tax_class_id")
    val taxClassId: kotlin.String? = null,

    @Json(name = "backorder_status")
    val backorderStatus: kotlin.String? = null,

    @Json(name = "visible")
    val visible: kotlin.String? = null,

    @Json(name = "is_default")
    val isDefault: kotlin.Boolean? = null,

    @Json(name = "in_stock")
    val inStock: kotlin.Boolean? = null,

    @Json(name = "is_virtual")
    val isVirtual: kotlin.Boolean? = null,

    @Json(name = "downloadable")
    val downloadable: kotlin.Boolean? = null,

    @Json(name = "manage_stock")
    val manageStock: kotlin.Boolean? = null,

    @Json(name = "is_free_shipping")
    val isFreeShipping: kotlin.Boolean? = null,

    @Json(name = "seo_url")
    val seoUrl: kotlin.String? = null,

    @Json(name = "meta_title")
    val metaTitle: kotlin.String? = null,

    @Json(name = "meta_description")
    val metaDescription: kotlin.String? = null,

    @Json(name = "meta_keywords")
    val metaKeywords: kotlin.collections.List<kotlin.String>? = null,

    /* If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'. */
    @Json(name = "categories_ids")
    val categoriesIds: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "stores_ids")
    val storesIds: kotlin.collections.List<kotlin.String>? = null,

    /* The passed items will completely replace the original items */
    @Json(name = "images")
    val images: kotlin.collections.List<ProductAddBatchPayloadInnerImagesInner>? = null,

    @Json(name = "product_images_ids")
    val productImagesIds: kotlin.collections.List<kotlin.String>? = null,

    /* If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'. */
    @Json(name = "related_products_ids")
    val relatedProductsIds: kotlin.collections.List<kotlin.String>? = null,

    /* If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'. */
    @Json(name = "up_sell_products_ids")
    val upSellProductsIds: kotlin.collections.List<kotlin.String>? = null,

    /* If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'. */
    @Json(name = "cross_sell_products_ids")
    val crossSellProductsIds: kotlin.collections.List<kotlin.String>? = null

) {


}

