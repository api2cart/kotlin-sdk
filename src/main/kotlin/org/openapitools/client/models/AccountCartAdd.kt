/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AccountCartAddHybrisWebsitesInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param cartId Store’s identifier which you can get from cart_list method
 * @param wixAppId Wix App ID
 * @param wixAppSecretKey Wix App Secret Key
 * @param storeUrl A web address of a store that you would like to connect to API2Cart
 * @param bridgeUrl This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
 * @param storeRoot Absolute path to the store root directory (used with \"bridge_url\" parameter)
 * @param storeKey Set this parameter if bridge is already uploaded to store
 * @param validateVersion Specify if api2cart should validate cart version
 * @param verify Enables or disables cart's verification
 * @param dbTablesPrefix DB tables prefix
 * @param userAgent This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values.
 * @param ftpHost FTP connection host
 * @param ftpUser FTP User
 * @param ftpPassword FTP Password
 * @param ftpPort FTP Port
 * @param ftpStoreDir FTP Store dir
 * @param `3dcartPrivateKey` 3DCart Private Key
 * @param `3dcartAccessToken` 3DCart Token
 * @param `3dcartapiApiKey` 3DCart API Key
 * @param amazonSpClientId Amazon SP API app client id
 * @param amazonSpClientSecret Amazon SP API app client secret
 * @param amazonSpRefreshToken Amazon SP API OAuth refresh token
 * @param amazonSpAwsRegion Amazon AWS Region
 * @param amazonSpApiEnvironment Amazon SP API environment
 * @param amazonSellerId Amazon Seller ID (Merchant token)
 * @param aspdotnetstorefrontApiUser It's a AspDotNetStorefront account for which API is available
 * @param aspdotnetstorefrontApiPass AspDotNetStorefront API Password
 * @param bigcommerceapiAdminAccount It's a BigCommerce account for which API is enabled
 * @param bigcommerceapiApiPath BigCommerce API URL
 * @param bigcommerceapiApiKey Bigcommerce API Key
 * @param bigcommerceapiClientId Client ID of the requesting app
 * @param bigcommerceapiAccessToken Access token authorizing the app to access resources on behalf of a user
 * @param bigcommerceapiContext API Path section unique to the store
 * @param bolApiKey Bol API Key
 * @param bolApiSecret Bol API Secret
 * @param bolRetailerId Bol Retailer ID
 * @param demandwareClientId Demandware client id
 * @param demandwareApiPassword Demandware api password
 * @param demandwareUserName Demandware user name
 * @param demandwareUserPassword Demandware user password
 * @param ebayClientId Application ID (AppID).
 * @param ebayClientSecret Shared Secret from eBay application
 * @param ebayRuname The RuName value that eBay assigns to your application.
 * @param ebayAccessToken Used to authenticate API requests.
 * @param ebayRefreshToken Used to renew the access token.
 * @param ebayEnvironment eBay environment
 * @param ebaySiteId eBay global ID
 * @param walmartClientId Walmart client ID. For the region 'ca' use Consumer ID
 * @param walmartClientSecret Walmart client secret. For the region 'ca' use Private Key
 * @param walmartEnvironment Walmart environment
 * @param walmartChannelType Walmart WM_CONSUMER.CHANNEL.TYPE header
 * @param walmartRegion Walmart region
 * @param ecwidAcessToken Access token authorizing the app to access resources on behalf of a user
 * @param ecwidStoreId Store Id
 * @param lazadaAppId Lazada App ID
 * @param lazadaAppSecret Lazada App Secret
 * @param lazadaRefreshToken Lazada Refresh Token
 * @param lazadaRegion Lazada API endpoint Region
 * @param lightspeedApiKey LightSpeed api key
 * @param lightspeedApiSecret LightSpeed api secret
 * @param etsyKeystring Etsy keystring
 * @param etsySharedSecret Etsy shared secret
 * @param etsyAccessToken Access token authorizing the app to access resources on behalf of a user
 * @param etsyTokenSecret Secret token authorizing the app to access resources on behalf of a user
 * @param etsyClientId Etsy Client Id
 * @param etsyRefreshToken Etsy Refresh token
 * @param facebookAppId Facebook App ID
 * @param facebookAppSecret Facebook App Secret
 * @param facebookAccessToken Facebook Access Token
 * @param facebookBusinessId Facebook Business ID
 * @param netoApiKey Neto API Key
 * @param netoApiUsername Neto User Name
 * @param shoplineAccessToken Shopline APP Key
 * @param shoplineAppKey Shopline APP Key
 * @param shoplineAppSecret Shopline App Secret
 * @param shopifyAccessToken Access token authorizing the app to access resources on behalf of a user
 * @param shopifyApiKey Shopify API Key
 * @param shopifyApiPassword Shopify API Password
 * @param shopifySharedSecret Shared secret
 * @param shoplazzaAccessToken Access token authorizing the app to access resources on behalf of a user
 * @param shoplazzaSharedSecret Shared secret
 * @param shopwareAccessKey Shopware access key
 * @param shopwareApiKey Shopware api key
 * @param shopwareApiSecret Shopware client secret access key
 * @param mivaAccessToken Miva access token
 * @param mivaSignature Miva signature
 * @param tiendanubeUserId Tiendanube User ID
 * @param tiendanubeAccessToken Tiendanube Access Token
 * @param tiendanubeClientSecret Tiendanube Client Secret
 * @param volusionLogin It's a Volusion account for which API is enabled
 * @param volusionPassword Volusion API Password
 * @param hybrisClientId Omni Commerce Connector Client ID
 * @param hybrisClientSecret Omni Commerce Connector Client Secret
 * @param hybrisUsername User Name
 * @param hybrisPassword User password
 * @param hybrisWebsites Websites to stores mapping data
 * @param squareClientId Square (Weebly) Client ID
 * @param squareClientSecret Square (Weebly) Client Secret
 * @param squareRefreshToken Square (Weebly) Refresh Token
 * @param squarespaceApiKey Squarespace API Key
 * @param squarespaceClientId Squarespace Connector Client ID
 * @param squarespaceClientSecret Squarespace Connector Client Secret
 * @param squarespaceAccessToken Squarespace access token
 * @param squarespaceRefreshToken Squarespace refresh token
 * @param commercehqApiKey CommerceHQ api key
 * @param commercehqApiPassword CommerceHQ api password
 * @param wcConsumerKey Woocommerce consumer key
 * @param wcConsumerSecret Woocommerce consumer secret
 * @param magentoConsumerKey Magento Consumer Key
 * @param magentoConsumerSecret Magento Consumer Secret
 * @param magentoAccessToken Magento Access Token
 * @param magentoTokenSecret Magento Token Secret
 * @param prestashopWebserviceKey Prestashop webservice key
 * @param wixInstanceId Wix Instance ID
 * @param wixRefreshToken Wix refresh token
 * @param mercadoLibreAppId Mercado Libre App ID
 * @param mercadoLibreAppSecretKey Mercado Libre App Secret Key
 * @param mercadoLibreRefreshToken Mercado Libre Refresh Token
 * @param zidClientId Zid Client ID
 * @param zidClientSecret Zid Client Secret
 * @param zidAccessToken Zid Access Token
 * @param zidAuthorization Zid Authorization
 * @param zidRefreshToken Zid refresh token
 * @param flipkartClientId Flipkart Client ID
 * @param flipkartClientSecret Flipkart Client Secret
 * @param allegroClientId Allegro Client ID
 * @param allegroClientSecret Allegro Client Secret
 * @param allegroAccessToken Allegro Access Token
 * @param allegroRefreshToken Allegro Refresh Token
 * @param allegroEnvironment Allegro Environment
 * @param zohoClientId Zoho Client ID
 * @param zohoClientSecret Zoho Client Secret
 * @param zohoRefreshToken Zoho Refresh Token
 * @param zohoRegion Zoho API endpoint Region
 * @param ottoClientId Otto Client ID
 * @param ottoClientSecret Otto Client Secret
 * @param ottoAppId Otto App ID
 * @param ottoRefreshToken Otto Refresh Token
 * @param ottoEnvironment Otto Environment
 * @param ottoAccessToken Otto Access Token
 * @param tiktokshopAppKey TikTok Shop App Key
 * @param tiktokshopAppSecret TikTok Shop App Secret
 * @param tiktokshopRefreshToken TikTok Shop Refresh Token
 * @param tiktokshopAccessToken TikTok Shop Access Token
 * @param sallaClientId Salla Client ID
 * @param sallaClientSecret Salla Client Secret
 * @param sallaRefreshToken Salla Refresh Token
 * @param sallaAccessToken Salla Access Token
 */


data class AccountCartAdd (

    /* Store’s identifier which you can get from cart_list method */
    @Json(name = "cart_id")
    val cartId: AccountCartAdd.CartId,

    /* Wix App ID */
    @Json(name = "wix_app_id")
    val wixAppId: kotlin.String,

    /* Wix App Secret Key */
    @Json(name = "wix_app_secret_key")
    val wixAppSecretKey: kotlin.String,

    /* A web address of a store that you would like to connect to API2Cart */
    @Json(name = "store_url")
    val storeUrl: kotlin.String? = null,

    /* This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store) */
    @Json(name = "bridge_url")
    val bridgeUrl: kotlin.String? = null,

    /* Absolute path to the store root directory (used with \"bridge_url\" parameter) */
    @Json(name = "store_root")
    val storeRoot: kotlin.String? = null,

    /* Set this parameter if bridge is already uploaded to store */
    @Json(name = "store_key")
    val storeKey: kotlin.String? = null,

    /* Specify if api2cart should validate cart version */
    @Json(name = "validate_version")
    val validateVersion: kotlin.Boolean? = false,

    /* Enables or disables cart's verification */
    @Json(name = "verify")
    val verify: kotlin.Boolean? = true,

    /* DB tables prefix */
    @Json(name = "db_tables_prefix")
    val dbTablesPrefix: kotlin.String? = null,

    /* This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values. */
    @Json(name = "user_agent")
    val userAgent: kotlin.String? = null,

    /* FTP connection host */
    @Json(name = "ftp_host")
    val ftpHost: kotlin.String? = null,

    /* FTP User */
    @Json(name = "ftp_user")
    val ftpUser: kotlin.String? = null,

    /* FTP Password */
    @Json(name = "ftp_password")
    val ftpPassword: kotlin.String? = null,

    /* FTP Port */
    @Json(name = "ftp_port")
    val ftpPort: kotlin.Int? = null,

    /* FTP Store dir */
    @Json(name = "ftp_store_dir")
    val ftpStoreDir: kotlin.String? = null,

    /* 3DCart Private Key */
    @Json(name = "3dcart_private_key")
    val `3dcartPrivateKey`: kotlin.String? = null,

    /* 3DCart Token */
    @Json(name = "3dcart_access_token")
    val `3dcartAccessToken`: kotlin.String? = null,

    /* 3DCart API Key */
    @Json(name = "3dcartapi_api_key")
    val `3dcartapiApiKey`: kotlin.String? = null,

    /* Amazon SP API app client id */
    @Json(name = "amazon_sp_client_id")
    val amazonSpClientId: kotlin.String? = null,

    /* Amazon SP API app client secret */
    @Json(name = "amazon_sp_client_secret")
    val amazonSpClientSecret: kotlin.String? = null,

    /* Amazon SP API OAuth refresh token */
    @Json(name = "amazon_sp_refresh_token")
    val amazonSpRefreshToken: kotlin.String? = null,

    /* Amazon AWS Region */
    @Json(name = "amazon_sp_aws_region")
    val amazonSpAwsRegion: kotlin.String? = null,

    /* Amazon SP API environment */
    @Json(name = "amazon_sp_api_environment")
    val amazonSpApiEnvironment: kotlin.String? = "production",

    /* Amazon Seller ID (Merchant token) */
    @Json(name = "amazon_seller_id")
    val amazonSellerId: kotlin.String? = null,

    /* It's a AspDotNetStorefront account for which API is available */
    @Json(name = "aspdotnetstorefront_api_user")
    val aspdotnetstorefrontApiUser: kotlin.String? = null,

    /* AspDotNetStorefront API Password */
    @Json(name = "aspdotnetstorefront_api_pass")
    val aspdotnetstorefrontApiPass: kotlin.String? = null,

    /* It's a BigCommerce account for which API is enabled */
    @Json(name = "bigcommerceapi_admin_account")
    val bigcommerceapiAdminAccount: kotlin.String? = null,

    /* BigCommerce API URL */
    @Json(name = "bigcommerceapi_api_path")
    val bigcommerceapiApiPath: kotlin.String? = null,

    /* Bigcommerce API Key */
    @Json(name = "bigcommerceapi_api_key")
    val bigcommerceapiApiKey: kotlin.String? = null,

    /* Client ID of the requesting app */
    @Json(name = "bigcommerceapi_client_id")
    val bigcommerceapiClientId: kotlin.String? = null,

    /* Access token authorizing the app to access resources on behalf of a user */
    @Json(name = "bigcommerceapi_access_token")
    val bigcommerceapiAccessToken: kotlin.String? = null,

    /* API Path section unique to the store */
    @Json(name = "bigcommerceapi_context")
    val bigcommerceapiContext: kotlin.String? = null,

    /* Bol API Key */
    @Json(name = "bol_api_key")
    val bolApiKey: kotlin.String? = null,

    /* Bol API Secret */
    @Json(name = "bol_api_secret")
    val bolApiSecret: kotlin.String? = null,

    /* Bol Retailer ID */
    @Json(name = "bol_retailer_id")
    val bolRetailerId: kotlin.Int? = null,

    /* Demandware client id */
    @Json(name = "demandware_client_id")
    val demandwareClientId: kotlin.String? = null,

    /* Demandware api password */
    @Json(name = "demandware_api_password")
    val demandwareApiPassword: kotlin.String? = null,

    /* Demandware user name */
    @Json(name = "demandware_user_name")
    val demandwareUserName: kotlin.String? = null,

    /* Demandware user password */
    @Json(name = "demandware_user_password")
    val demandwareUserPassword: kotlin.String? = null,

    /* Application ID (AppID). */
    @Json(name = "ebay_client_id")
    val ebayClientId: kotlin.String? = null,

    /* Shared Secret from eBay application */
    @Json(name = "ebay_client_secret")
    val ebayClientSecret: kotlin.String? = null,

    /* The RuName value that eBay assigns to your application. */
    @Json(name = "ebay_runame")
    val ebayRuname: kotlin.String? = null,

    /* Used to authenticate API requests. */
    @Json(name = "ebay_access_token")
    val ebayAccessToken: kotlin.String? = null,

    /* Used to renew the access token. */
    @Json(name = "ebay_refresh_token")
    val ebayRefreshToken: kotlin.String? = null,

    /* eBay environment */
    @Json(name = "ebay_environment")
    val ebayEnvironment: kotlin.String? = "production",

    /* eBay global ID */
    @Json(name = "ebay_site_id")
    val ebaySiteId: kotlin.Int? = 0,

    /* Walmart client ID. For the region 'ca' use Consumer ID */
    @Json(name = "walmart_client_id")
    val walmartClientId: kotlin.String? = null,

    /* Walmart client secret. For the region 'ca' use Private Key */
    @Json(name = "walmart_client_secret")
    val walmartClientSecret: kotlin.String? = null,

    /* Walmart environment */
    @Json(name = "walmart_environment")
    val walmartEnvironment: kotlin.String? = "production",

    /* Walmart WM_CONSUMER.CHANNEL.TYPE header */
    @Json(name = "walmart_channel_type")
    val walmartChannelType: kotlin.String? = null,

    /* Walmart region */
    @Json(name = "walmart_region")
    val walmartRegion: kotlin.String? = "us",

    /* Access token authorizing the app to access resources on behalf of a user */
    @Json(name = "ecwid_acess_token")
    val ecwidAcessToken: kotlin.String? = null,

    /* Store Id */
    @Json(name = "ecwid_store_id")
    val ecwidStoreId: kotlin.String? = null,

    /* Lazada App ID */
    @Json(name = "lazada_app_id")
    val lazadaAppId: kotlin.String? = null,

    /* Lazada App Secret */
    @Json(name = "lazada_app_secret")
    val lazadaAppSecret: kotlin.String? = null,

    /* Lazada Refresh Token */
    @Json(name = "lazada_refresh_token")
    val lazadaRefreshToken: kotlin.String? = null,

    /* Lazada API endpoint Region */
    @Json(name = "lazada_region")
    val lazadaRegion: kotlin.String? = null,

    /* LightSpeed api key */
    @Json(name = "lightspeed_api_key")
    val lightspeedApiKey: kotlin.String? = null,

    /* LightSpeed api secret */
    @Json(name = "lightspeed_api_secret")
    val lightspeedApiSecret: kotlin.String? = null,

    /* Etsy keystring */
    @Json(name = "etsy_keystring")
    val etsyKeystring: kotlin.String? = null,

    /* Etsy shared secret */
    @Json(name = "etsy_shared_secret")
    val etsySharedSecret: kotlin.String? = null,

    /* Access token authorizing the app to access resources on behalf of a user */
    @Json(name = "etsy_access_token")
    val etsyAccessToken: kotlin.String? = null,

    /* Secret token authorizing the app to access resources on behalf of a user */
    @Json(name = "etsy_token_secret")
    val etsyTokenSecret: kotlin.String? = null,

    /* Etsy Client Id */
    @Json(name = "etsy_client_id")
    val etsyClientId: kotlin.String? = null,

    /* Etsy Refresh token */
    @Json(name = "etsy_refresh_token")
    val etsyRefreshToken: kotlin.String? = null,

    /* Facebook App ID */
    @Json(name = "facebook_app_id")
    val facebookAppId: kotlin.String? = null,

    /* Facebook App Secret */
    @Json(name = "facebook_app_secret")
    val facebookAppSecret: kotlin.String? = null,

    /* Facebook Access Token */
    @Json(name = "facebook_access_token")
    val facebookAccessToken: kotlin.String? = null,

    /* Facebook Business ID */
    @Json(name = "facebook_business_id")
    val facebookBusinessId: kotlin.String? = null,

    /* Neto API Key */
    @Json(name = "neto_api_key")
    val netoApiKey: kotlin.String? = null,

    /* Neto User Name */
    @Json(name = "neto_api_username")
    val netoApiUsername: kotlin.String? = null,

    /* Shopline APP Key */
    @Json(name = "shopline_access_token")
    val shoplineAccessToken: kotlin.String? = null,

    /* Shopline APP Key */
    @Json(name = "shopline_app_key")
    val shoplineAppKey: kotlin.String? = null,

    /* Shopline App Secret */
    @Json(name = "shopline_app_secret")
    val shoplineAppSecret: kotlin.String? = null,

    /* Access token authorizing the app to access resources on behalf of a user */
    @Json(name = "shopify_access_token")
    val shopifyAccessToken: kotlin.String? = null,

    /* Shopify API Key */
    @Json(name = "shopify_api_key")
    val shopifyApiKey: kotlin.String? = null,

    /* Shopify API Password */
    @Json(name = "shopify_api_password")
    val shopifyApiPassword: kotlin.String? = null,

    /* Shared secret */
    @Json(name = "shopify_shared_secret")
    val shopifySharedSecret: kotlin.String? = null,

    /* Access token authorizing the app to access resources on behalf of a user */
    @Json(name = "shoplazza_access_token")
    val shoplazzaAccessToken: kotlin.String? = null,

    /* Shared secret */
    @Json(name = "shoplazza_shared_secret")
    val shoplazzaSharedSecret: kotlin.String? = null,

    /* Shopware access key */
    @Json(name = "shopware_access_key")
    val shopwareAccessKey: kotlin.String? = null,

    /* Shopware api key */
    @Json(name = "shopware_api_key")
    val shopwareApiKey: kotlin.String? = null,

    /* Shopware client secret access key */
    @Json(name = "shopware_api_secret")
    val shopwareApiSecret: kotlin.String? = null,

    /* Miva access token */
    @Json(name = "miva_access_token")
    val mivaAccessToken: kotlin.String? = null,

    /* Miva signature */
    @Json(name = "miva_signature")
    val mivaSignature: kotlin.String? = null,

    /* Tiendanube User ID */
    @Json(name = "tiendanube_user_id")
    val tiendanubeUserId: kotlin.Int? = null,

    /* Tiendanube Access Token */
    @Json(name = "tiendanube_access_token")
    val tiendanubeAccessToken: kotlin.String? = null,

    /* Tiendanube Client Secret */
    @Json(name = "tiendanube_client_secret")
    val tiendanubeClientSecret: kotlin.String? = null,

    /* It's a Volusion account for which API is enabled */
    @Json(name = "volusion_login")
    val volusionLogin: kotlin.String? = null,

    /* Volusion API Password */
    @Json(name = "volusion_password")
    val volusionPassword: kotlin.String? = null,

    /* Omni Commerce Connector Client ID */
    @Json(name = "hybris_client_id")
    val hybrisClientId: kotlin.String? = null,

    /* Omni Commerce Connector Client Secret */
    @Json(name = "hybris_client_secret")
    val hybrisClientSecret: kotlin.String? = null,

    /* User Name */
    @Json(name = "hybris_username")
    val hybrisUsername: kotlin.String? = null,

    /* User password */
    @Json(name = "hybris_password")
    val hybrisPassword: kotlin.String? = null,

    /* Websites to stores mapping data */
    @Json(name = "hybris_websites")
    val hybrisWebsites: kotlin.collections.List<AccountCartAddHybrisWebsitesInner>? = null,

    /* Square (Weebly) Client ID */
    @Json(name = "square_client_id")
    val squareClientId: kotlin.String? = null,

    /* Square (Weebly) Client Secret */
    @Json(name = "square_client_secret")
    val squareClientSecret: kotlin.String? = null,

    /* Square (Weebly) Refresh Token */
    @Json(name = "square_refresh_token")
    val squareRefreshToken: kotlin.String? = null,

    /* Squarespace API Key */
    @Json(name = "squarespace_api_key")
    val squarespaceApiKey: kotlin.String? = null,

    /* Squarespace Connector Client ID */
    @Json(name = "squarespace_client_id")
    val squarespaceClientId: kotlin.String? = null,

    /* Squarespace Connector Client Secret */
    @Json(name = "squarespace_client_secret")
    val squarespaceClientSecret: kotlin.String? = null,

    /* Squarespace access token */
    @Json(name = "squarespace_access_token")
    val squarespaceAccessToken: kotlin.String? = null,

    /* Squarespace refresh token */
    @Json(name = "squarespace_refresh_token")
    val squarespaceRefreshToken: kotlin.String? = null,

    /* CommerceHQ api key */
    @Json(name = "commercehq_api_key")
    val commercehqApiKey: kotlin.String? = null,

    /* CommerceHQ api password */
    @Json(name = "commercehq_api_password")
    val commercehqApiPassword: kotlin.String? = null,

    /* Woocommerce consumer key */
    @Json(name = "wc_consumer_key")
    val wcConsumerKey: kotlin.String? = null,

    /* Woocommerce consumer secret */
    @Json(name = "wc_consumer_secret")
    val wcConsumerSecret: kotlin.String? = null,

    /* Magento Consumer Key */
    @Json(name = "magento_consumer_key")
    val magentoConsumerKey: kotlin.String? = null,

    /* Magento Consumer Secret */
    @Json(name = "magento_consumer_secret")
    val magentoConsumerSecret: kotlin.String? = null,

    /* Magento Access Token */
    @Json(name = "magento_access_token")
    val magentoAccessToken: kotlin.String? = null,

    /* Magento Token Secret */
    @Json(name = "magento_token_secret")
    val magentoTokenSecret: kotlin.String? = null,

    /* Prestashop webservice key */
    @Json(name = "prestashop_webservice_key")
    val prestashopWebserviceKey: kotlin.String? = null,

    /* Wix Instance ID */
    @Json(name = "wix_instance_id")
    val wixInstanceId: kotlin.String? = null,

    /* Wix refresh token */
    @Json(name = "wix_refresh_token")
    val wixRefreshToken: kotlin.String? = null,

    /* Mercado Libre App ID */
    @Json(name = "mercado_libre_app_id")
    val mercadoLibreAppId: kotlin.String? = null,

    /* Mercado Libre App Secret Key */
    @Json(name = "mercado_libre_app_secret_key")
    val mercadoLibreAppSecretKey: kotlin.String? = null,

    /* Mercado Libre Refresh Token */
    @Json(name = "mercado_libre_refresh_token")
    val mercadoLibreRefreshToken: kotlin.String? = null,

    /* Zid Client ID */
    @Json(name = "zid_client_id")
    val zidClientId: kotlin.Int? = null,

    /* Zid Client Secret */
    @Json(name = "zid_client_secret")
    val zidClientSecret: kotlin.String? = null,

    /* Zid Access Token */
    @Json(name = "zid_access_token")
    val zidAccessToken: kotlin.String? = null,

    /* Zid Authorization */
    @Json(name = "zid_authorization")
    val zidAuthorization: kotlin.String? = null,

    /* Zid refresh token */
    @Json(name = "zid_refresh_token")
    val zidRefreshToken: kotlin.String? = null,

    /* Flipkart Client ID */
    @Json(name = "flipkart_client_id")
    val flipkartClientId: kotlin.String? = null,

    /* Flipkart Client Secret */
    @Json(name = "flipkart_client_secret")
    val flipkartClientSecret: kotlin.String? = null,

    /* Allegro Client ID */
    @Json(name = "allegro_client_id")
    val allegroClientId: kotlin.String? = null,

    /* Allegro Client Secret */
    @Json(name = "allegro_client_secret")
    val allegroClientSecret: kotlin.String? = null,

    /* Allegro Access Token */
    @Json(name = "allegro_access_token")
    val allegroAccessToken: kotlin.String? = null,

    /* Allegro Refresh Token */
    @Json(name = "allegro_refresh_token")
    val allegroRefreshToken: kotlin.String? = null,

    /* Allegro Environment */
    @Json(name = "allegro_environment")
    val allegroEnvironment: kotlin.String? = "production",

    /* Zoho Client ID */
    @Json(name = "zoho_client_id")
    val zohoClientId: kotlin.String? = null,

    /* Zoho Client Secret */
    @Json(name = "zoho_client_secret")
    val zohoClientSecret: kotlin.String? = null,

    /* Zoho Refresh Token */
    @Json(name = "zoho_refresh_token")
    val zohoRefreshToken: kotlin.String? = null,

    /* Zoho API endpoint Region */
    @Json(name = "zoho_region")
    val zohoRegion: kotlin.String? = null,

    /* Otto Client ID */
    @Json(name = "otto_client_id")
    val ottoClientId: kotlin.String? = null,

    /* Otto Client Secret */
    @Json(name = "otto_client_secret")
    val ottoClientSecret: kotlin.String? = null,

    /* Otto App ID */
    @Json(name = "otto_app_id")
    val ottoAppId: kotlin.String? = null,

    /* Otto Refresh Token */
    @Json(name = "otto_refresh_token")
    val ottoRefreshToken: kotlin.String? = null,

    /* Otto Environment */
    @Json(name = "otto_environment")
    val ottoEnvironment: kotlin.String? = "production",

    /* Otto Access Token */
    @Json(name = "otto_access_token")
    val ottoAccessToken: kotlin.String? = null,

    /* TikTok Shop App Key */
    @Json(name = "tiktokshop_app_key")
    val tiktokshopAppKey: kotlin.String? = null,

    /* TikTok Shop App Secret */
    @Json(name = "tiktokshop_app_secret")
    val tiktokshopAppSecret: kotlin.String? = null,

    /* TikTok Shop Refresh Token */
    @Json(name = "tiktokshop_refresh_token")
    val tiktokshopRefreshToken: kotlin.String? = null,

    /* TikTok Shop Access Token */
    @Json(name = "tiktokshop_access_token")
    val tiktokshopAccessToken: kotlin.String? = null,

    /* Salla Client ID */
    @Json(name = "salla_client_id")
    val sallaClientId: kotlin.String? = null,

    /* Salla Client Secret */
    @Json(name = "salla_client_secret")
    val sallaClientSecret: kotlin.String? = null,

    /* Salla Refresh Token */
    @Json(name = "salla_refresh_token")
    val sallaRefreshToken: kotlin.String? = null,

    /* Salla Access Token */
    @Json(name = "salla_access_token")
    val sallaAccessToken: kotlin.String? = null

) {

    /**
     * Store’s identifier which you can get from cart_list method
     *
     * Values: _3DCart,_3DCartApi,AceShop,AmazonSP,AspDotNetStorefront,BigcommerceApi,Bol,CommerceHQ,Creloaded,Cscart,Cubecart,Demandware,EBay,Ecwid,EtsyAPIv3,Flipkart,Gambio,Hybris,JooCart,Lazada,LightSpeed,Magento1212,Magento2Api,MercadoLibre,MijoShop,Miva,Neto,Opencart14,Oscmax2,Oscommerce22ms2,Otto,Oxid,Pinnacle,Prestashop,PrestashopApi,SSPremium,Salla,Shopify,Shoplazza,Shopline,Shopware,ShopwareApi,Square,Squarespace,Tiendanube,TikTokShop,Tomatocart,Ubercart,Virtuemart,Volusion,WPecommerce,Walmart,WebAsyst,Wix,Woocommerce,WoocommerceApi,Xcart,Xtcommerce,XtcommerceVeyton,Zencart137,Zid,Zoey,Zoho
     */
    @JsonClass(generateAdapter = false)
    enum class CartId(val value: kotlin.String) {
        @Json(name = "3DCart") _3DCart("3DCart"),
        @Json(name = "3DCartApi") _3DCartApi("3DCartApi"),
        @Json(name = "AceShop") AceShop("AceShop"),
        @Json(name = "AmazonSP") AmazonSP("AmazonSP"),
        @Json(name = "AspDotNetStorefront") AspDotNetStorefront("AspDotNetStorefront"),
        @Json(name = "BigcommerceApi") BigcommerceApi("BigcommerceApi"),
        @Json(name = "Bol") Bol("Bol"),
        @Json(name = "CommerceHQ") CommerceHQ("CommerceHQ"),
        @Json(name = "Creloaded") Creloaded("Creloaded"),
        @Json(name = "Cscart") Cscart("Cscart"),
        @Json(name = "Cubecart") Cubecart("Cubecart"),
        @Json(name = "Demandware") Demandware("Demandware"),
        @Json(name = "EBay") EBay("EBay"),
        @Json(name = "Ecwid") Ecwid("Ecwid"),
        @Json(name = "EtsyAPIv3") EtsyAPIv3("EtsyAPIv3"),
        @Json(name = "Flipkart") Flipkart("Flipkart"),
        @Json(name = "Gambio") Gambio("Gambio"),
        @Json(name = "Hybris") Hybris("Hybris"),
        @Json(name = "JooCart") JooCart("JooCart"),
        @Json(name = "Lazada") Lazada("Lazada"),
        @Json(name = "LightSpeed") LightSpeed("LightSpeed"),
        @Json(name = "Magento1212") Magento1212("Magento1212"),
        @Json(name = "Magento2Api") Magento2Api("Magento2Api"),
        @Json(name = "MercadoLibre") MercadoLibre("MercadoLibre"),
        @Json(name = "MijoShop") MijoShop("MijoShop"),
        @Json(name = "Miva") Miva("Miva"),
        @Json(name = "Neto") Neto("Neto"),
        @Json(name = "Opencart14") Opencart14("Opencart14"),
        @Json(name = "Oscmax2") Oscmax2("Oscmax2"),
        @Json(name = "Oscommerce22ms2") Oscommerce22ms2("Oscommerce22ms2"),
        @Json(name = "Otto") Otto("Otto"),
        @Json(name = "Oxid") Oxid("Oxid"),
        @Json(name = "Pinnacle") Pinnacle("Pinnacle"),
        @Json(name = "Prestashop") Prestashop("Prestashop"),
        @Json(name = "PrestashopApi") PrestashopApi("PrestashopApi"),
        @Json(name = "SSPremium") SSPremium("SSPremium"),
        @Json(name = "Salla") Salla("Salla"),
        @Json(name = "Shopify") Shopify("Shopify"),
        @Json(name = "Shoplazza") Shoplazza("Shoplazza"),
        @Json(name = "Shopline") Shopline("Shopline"),
        @Json(name = "Shopware") Shopware("Shopware"),
        @Json(name = "ShopwareApi") ShopwareApi("ShopwareApi"),
        @Json(name = "Square") Square("Square"),
        @Json(name = "Squarespace") Squarespace("Squarespace"),
        @Json(name = "Tiendanube") Tiendanube("Tiendanube"),
        @Json(name = "TikTokShop") TikTokShop("TikTokShop"),
        @Json(name = "Tomatocart") Tomatocart("Tomatocart"),
        @Json(name = "Ubercart") Ubercart("Ubercart"),
        @Json(name = "Virtuemart") Virtuemart("Virtuemart"),
        @Json(name = "Volusion") Volusion("Volusion"),
        @Json(name = "WPecommerce") WPecommerce("WPecommerce"),
        @Json(name = "Walmart") Walmart("Walmart"),
        @Json(name = "WebAsyst") WebAsyst("WebAsyst"),
        @Json(name = "Wix") Wix("Wix"),
        @Json(name = "Woocommerce") Woocommerce("Woocommerce"),
        @Json(name = "WoocommerceApi") WoocommerceApi("WoocommerceApi"),
        @Json(name = "Xcart") Xcart("Xcart"),
        @Json(name = "Xtcommerce") Xtcommerce("Xtcommerce"),
        @Json(name = "XtcommerceVeyton") XtcommerceVeyton("XtcommerceVeyton"),
        @Json(name = "Zencart137") Zencart137("Zencart137"),
        @Json(name = "Zid") Zid("Zid"),
        @Json(name = "Zoey") Zoey("Zoey"),
        @Json(name = "Zoho") Zoho("Zoho");
    }

}

