/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param productVariantId Defines product's variants specified by variant id
 * @param imageName Defines image's name
 * @param type Defines image's types that are specified by comma-separated list
 * @param productId Defines product id where the variant image has to be added
 * @param storeId Store Id
 * @param url Defines URL of the image that has to be added
 * @param content Content(body) encoded in base64 of image file
 * @param label Defines alternative text that has to be attached to the picture
 * @param mime Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.
 * @param position Defines image’s position in the list
 * @param optionId Defines option id of the product variant for which the image will be added
 */


data class ProductVariantImageAdd (

    /* Defines product's variants specified by variant id */
    @Json(name = "product_variant_id")
    val productVariantId: kotlin.String,

    /* Defines image's name */
    @Json(name = "image_name")
    val imageName: kotlin.String,

    /* Defines image's types that are specified by comma-separated list */
    @Json(name = "type")
    val type: ProductVariantImageAdd.Type = Type.base,

    /* Defines product id where the variant image has to be added */
    @Json(name = "product_id")
    val productId: kotlin.String? = null,

    /* Store Id */
    @Json(name = "store_id")
    val storeId: kotlin.String? = null,

    /* Defines URL of the image that has to be added */
    @Json(name = "url")
    val url: kotlin.String? = null,

    /* Content(body) encoded in base64 of image file */
    @Json(name = "content")
    val content: kotlin.String? = null,

    /* Defines alternative text that has to be attached to the picture */
    @Json(name = "label")
    val label: kotlin.String? = null,

    /* Mime type of image http://en.wikipedia.org/wiki/Internet_media_type. */
    @Json(name = "mime")
    val mime: kotlin.String? = null,

    /* Defines image’s position in the list */
    @Json(name = "position")
    val position: kotlin.Int? = 0,

    /* Defines option id of the product variant for which the image will be added */
    @Json(name = "option_id")
    val optionId: kotlin.String? = null

) {

    /**
     * Defines image's types that are specified by comma-separated list
     *
     * Values: small,base,additional,thumbnail
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "small") small("small"),
        @Json(name = "base") base("base"),
        @Json(name = "additional") additional("additional"),
        @Json(name = "thumbnail") thumbnail("thumbnail");
    }

}

