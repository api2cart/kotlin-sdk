/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CustomerAddAddressInner
import org.openapitools.client.models.CustomerAddConsentsInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param email Defines customer's email
 * @param firstName Defines customer's first name
 * @param lastName Defines customer's last name
 * @param password Defines customer's unique password
 * @param group Defines the group where the customer
 * @param groupId Customer group_id
 * @param groupIds Groups that will be assigned to a customer
 * @param status Defines customer's status
 * @param createdTime Entity's date creation
 * @param modifiedTime Entity's date modification
 * @param login Specifies customer's login name
 * @param lastLogin Defines customer's last login time
 * @param birthDay Defines customer's birthday
 * @param newsLetterSubscription Defines whether the newsletter subscription is available for the user
 * @param consents Defines consents to notifications
 * @param gender Defines customer's gender
 * @param website Link to customer website
 * @param fax Defines customer's fax
 * @param company Defines customer's company
 * @param phone Defines customer's phone number
 * @param note The customer note.
 * @param country Specifies ISO code or name of country
 * @param storeId Store Id
 * @param address 
 */


data class CustomerAdd (

    /* Defines customer's email */
    @Json(name = "email")
    val email: kotlin.String,

    /* Defines customer's first name */
    @Json(name = "first_name")
    val firstName: kotlin.String? = null,

    /* Defines customer's last name */
    @Json(name = "last_name")
    val lastName: kotlin.String? = null,

    /* Defines customer's unique password */
    @Json(name = "password")
    val password: kotlin.String? = null,

    /* Defines the group where the customer */
    @Json(name = "group")
    val group: kotlin.String? = null,

    /* Customer group_id */
    @Json(name = "group_id")
    val groupId: kotlin.String? = null,

    /* Groups that will be assigned to a customer */
    @Json(name = "group_ids")
    val groupIds: kotlin.String? = null,

    /* Defines customer's status */
    @Json(name = "status")
    val status: kotlin.String? = "enabled",

    /* Entity's date creation */
    @Json(name = "created_time")
    val createdTime: kotlin.String? = null,

    /* Entity's date modification */
    @Json(name = "modified_time")
    val modifiedTime: kotlin.String? = null,

    /* Specifies customer's login name */
    @Json(name = "login")
    val login: kotlin.String? = null,

    /* Defines customer's last login time */
    @Json(name = "last_login")
    val lastLogin: kotlin.String? = null,

    /* Defines customer's birthday */
    @Json(name = "birth_day")
    val birthDay: kotlin.String? = null,

    /* Defines whether the newsletter subscription is available for the user */
    @Json(name = "news_letter_subscription")
    val newsLetterSubscription: kotlin.Boolean? = null,

    /* Defines consents to notifications */
    @Json(name = "consents")
    val consents: kotlin.collections.List<CustomerAddConsentsInner>? = null,

    /* Defines customer's gender */
    @Json(name = "gender")
    val gender: kotlin.String? = null,

    /* Link to customer website */
    @Json(name = "website")
    val website: kotlin.String? = null,

    /* Defines customer's fax */
    @Json(name = "fax")
    val fax: kotlin.String? = null,

    /* Defines customer's company */
    @Json(name = "company")
    val company: kotlin.String? = null,

    /* Defines customer's phone number */
    @Json(name = "phone")
    val phone: kotlin.String? = null,

    /* The customer note. */
    @Json(name = "note")
    val note: kotlin.String? = null,

    /* Specifies ISO code or name of country */
    @Json(name = "country")
    val country: kotlin.String? = null,

    /* Store Id */
    @Json(name = "store_id")
    val storeId: kotlin.String? = null,

    @Json(name = "address")
    val address: kotlin.collections.List<CustomerAddAddressInner>? = null

) {


}

