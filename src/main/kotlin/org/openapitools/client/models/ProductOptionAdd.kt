/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ProductOptionAddValuesInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name Defines option's name
 * @param type Defines option's type that has to be added
 * @param productId Defines product id where the option should be added
 * @param defaultOptionValue Defines default option value that has to be added
 * @param optionValues Defines option values that has to be added
 * @param description Defines option's description
 * @param avail Defines whether the option is available
 * @param sortOrder Sort number in the list
 * @param required Defines if the option is required
 * @param propertyValues An array of option values.</b>
 * @param clearCache Is cache clear required
 */


data class ProductOptionAdd (

    /* Defines option's name */
    @Json(name = "name")
    val name: kotlin.String,

    /* Defines option's type that has to be added */
    @Json(name = "type")
    val type: ProductOptionAdd.Type,

    /* Defines product id where the option should be added */
    @Json(name = "product_id")
    val productId: kotlin.String? = null,

    /* Defines default option value that has to be added */
    @Json(name = "default_option_value")
    val defaultOptionValue: kotlin.String? = null,

    /* Defines option values that has to be added */
    @Json(name = "option_values")
    val optionValues: kotlin.String? = null,

    /* Defines option's description */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Defines whether the option is available */
    @Json(name = "avail")
    val avail: kotlin.Boolean? = true,

    /* Sort number in the list */
    @Json(name = "sort_order")
    val sortOrder: kotlin.Int? = 0,

    /* Defines if the option is required */
    @Json(name = "required")
    val required: kotlin.Boolean? = false,

    /* An array of option values.</b> */
    @Json(name = "values")
    val propertyValues: kotlin.collections.List<ProductOptionAddValuesInner>? = null,

    /* Is cache clear required */
    @Json(name = "clear_cache")
    val clearCache: kotlin.Boolean? = true

) {

    /**
     * Defines option's type that has to be added
     *
     * Values: option_type_select,option_type_text,option_type_radio,option_type_checkbox,option_type_textarea,option_type_readonly,option_type_multiselect,option_type_multicheckbox,option_type_file,option_type_date,option_type_datetime,option_type_time
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "option_type_select") option_type_select("option_type_select"),
        @Json(name = "option_type_text") option_type_text("option_type_text"),
        @Json(name = "option_type_radio") option_type_radio("option_type_radio"),
        @Json(name = "option_type_checkbox") option_type_checkbox("option_type_checkbox"),
        @Json(name = "option_type_textarea") option_type_textarea("option_type_textarea"),
        @Json(name = "option_type_readonly") option_type_readonly("option_type_readonly"),
        @Json(name = "option_type_multiselect") option_type_multiselect("option_type_multiselect"),
        @Json(name = "option_type_multicheckbox") option_type_multicheckbox("option_type_multicheckbox"),
        @Json(name = "option_type_file") option_type_file("option_type_file"),
        @Json(name = "option_type_date") option_type_date("option_type_date"),
        @Json(name = "option_type_datetime") option_type_datetime("option_type_datetime"),
        @Json(name = "option_type_time") option_type_time("option_type_time");
    }

}

