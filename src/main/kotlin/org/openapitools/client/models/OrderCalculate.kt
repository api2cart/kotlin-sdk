/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.OrderCalculateOrderItemInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param customerEmail Defines the customer specified by email for whom the order needs to be calculated
 * @param shippFirstName Specifies shipping first name
 * @param shippLastName Specifies shipping last name
 * @param shippAddress1 Specifies first shipping address
 * @param shippCity Specifies shipping city
 * @param shippPostcode Specifies shipping postcode
 * @param shippCountry Specifies shipping country code
 * @param orderItem 
 * @param currencyId Currency Id
 * @param storeId Store Id
 * @param coupons Coupons that will be applied to order. If the order isn't eligible for any given discount code or there is no discount with such a code it will be skipped during calculation
 * @param shippAddress2 Specifies second address line of a shipping street address
 * @param shippState Specifies shipping state code
 * @param shippCompany Specifies shipping company
 * @param shippPhone Specifies shipping phone
 * @param billFirstName Specifies billing first name
 * @param billLastName Specifies billing last name
 * @param billAddress1 Specifies first billing address
 * @param billAddress2 Specifies second billing address
 * @param billCity Specifies billing city
 * @param billPostcode Specifies billing postcode
 * @param billState Specifies billing state code
 * @param billCountry Specifies billing country code
 * @param billCompany Specifies billing company
 * @param billPhone Specifies billing phone
 * @param responseFields Set this parameter in order to choose which entity fields you want to retrieve
 */


data class OrderCalculate (

    /* Defines the customer specified by email for whom the order needs to be calculated */
    @Json(name = "customer_email")
    val customerEmail: kotlin.String,

    /* Specifies shipping first name */
    @Json(name = "shipp_first_name")
    val shippFirstName: kotlin.String,

    /* Specifies shipping last name */
    @Json(name = "shipp_last_name")
    val shippLastName: kotlin.String,

    /* Specifies first shipping address */
    @Json(name = "shipp_address_1")
    val shippAddress1: kotlin.String,

    /* Specifies shipping city */
    @Json(name = "shipp_city")
    val shippCity: kotlin.String,

    /* Specifies shipping postcode */
    @Json(name = "shipp_postcode")
    val shippPostcode: kotlin.String,

    /* Specifies shipping country code */
    @Json(name = "shipp_country")
    val shippCountry: kotlin.String,

    @Json(name = "order_item")
    val orderItem: kotlin.collections.List<OrderCalculateOrderItemInner>,

    /* Currency Id */
    @Json(name = "currency_id")
    val currencyId: kotlin.String? = null,

    /* Store Id */
    @Json(name = "store_id")
    val storeId: kotlin.String? = null,

    /* Coupons that will be applied to order. If the order isn't eligible for any given discount code or there is no discount with such a code it will be skipped during calculation */
    @Json(name = "coupons")
    val coupons: kotlin.collections.List<kotlin.String>? = null,

    /* Specifies second address line of a shipping street address */
    @Json(name = "shipp_address_2")
    val shippAddress2: kotlin.String? = null,

    /* Specifies shipping state code */
    @Json(name = "shipp_state")
    val shippState: kotlin.String? = null,

    /* Specifies shipping company */
    @Json(name = "shipp_company")
    val shippCompany: kotlin.String? = null,

    /* Specifies shipping phone */
    @Json(name = "shipp_phone")
    val shippPhone: kotlin.String? = null,

    /* Specifies billing first name */
    @Json(name = "bill_first_name")
    val billFirstName: kotlin.String? = null,

    /* Specifies billing last name */
    @Json(name = "bill_last_name")
    val billLastName: kotlin.String? = null,

    /* Specifies first billing address */
    @Json(name = "bill_address_1")
    val billAddress1: kotlin.String? = null,

    /* Specifies second billing address */
    @Json(name = "bill_address_2")
    val billAddress2: kotlin.String? = null,

    /* Specifies billing city */
    @Json(name = "bill_city")
    val billCity: kotlin.String? = null,

    /* Specifies billing postcode */
    @Json(name = "bill_postcode")
    val billPostcode: kotlin.String? = null,

    /* Specifies billing state code */
    @Json(name = "bill_state")
    val billState: kotlin.String? = null,

    /* Specifies billing country code */
    @Json(name = "bill_country")
    val billCountry: kotlin.String? = null,

    /* Specifies billing company */
    @Json(name = "bill_company")
    val billCompany: kotlin.String? = null,

    /* Specifies billing phone */
    @Json(name = "bill_phone")
    val billPhone: kotlin.String? = null,

    /* Set this parameter in order to choose which entity fields you want to retrieve */
    @Json(name = "response_fields")
    val responseFields: kotlin.String? = null

) {


}

