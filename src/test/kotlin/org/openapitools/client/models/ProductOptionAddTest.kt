/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ProductOptionAdd
import org.openapitools.client.models.ProductOptionAddValuesInner

class ProductOptionAddTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ProductOptionAdd
        //val modelInstance = ProductOptionAdd()

        // to test the property `name` - Defines option's name
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `type` - Defines option's type that has to be added
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `productId` - Defines product id where the option should be added
        should("test productId") {
            // uncomment below to test the property
            //modelInstance.productId shouldBe ("TODO")
        }

        // to test the property `defaultOptionValue` - Defines default option value that has to be added
        should("test defaultOptionValue") {
            // uncomment below to test the property
            //modelInstance.defaultOptionValue shouldBe ("TODO")
        }

        // to test the property `optionValues` - Defines option values that has to be added
        should("test optionValues") {
            // uncomment below to test the property
            //modelInstance.optionValues shouldBe ("TODO")
        }

        // to test the property `description` - Defines option's description
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `avail` - Defines whether the option is available
        should("test avail") {
            // uncomment below to test the property
            //modelInstance.avail shouldBe ("TODO")
        }

        // to test the property `sortOrder` - Sort number in the list
        should("test sortOrder") {
            // uncomment below to test the property
            //modelInstance.sortOrder shouldBe ("TODO")
        }

        // to test the property `required` - Defines if the option is required
        should("test required") {
            // uncomment below to test the property
            //modelInstance.required shouldBe ("TODO")
        }

        // to test the property `propertyValues` - An array of option values.</b>
        should("test propertyValues") {
            // uncomment below to test the property
            //modelInstance.propertyValues shouldBe ("TODO")
        }

        // to test the property `clearCache` - Is cache clear required
        should("test clearCache") {
            // uncomment below to test the property
            //modelInstance.clearCache shouldBe ("TODO")
        }

    }
}
