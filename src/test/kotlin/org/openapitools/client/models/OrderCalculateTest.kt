/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.OrderCalculate
import org.openapitools.client.models.OrderCalculateOrderItemInner

class OrderCalculateTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderCalculate
        //val modelInstance = OrderCalculate()

        // to test the property `customerEmail` - Defines the customer specified by email for whom the order needs to be calculated
        should("test customerEmail") {
            // uncomment below to test the property
            //modelInstance.customerEmail shouldBe ("TODO")
        }

        // to test the property `shippFirstName` - Specifies shipping first name
        should("test shippFirstName") {
            // uncomment below to test the property
            //modelInstance.shippFirstName shouldBe ("TODO")
        }

        // to test the property `shippLastName` - Specifies shipping last name
        should("test shippLastName") {
            // uncomment below to test the property
            //modelInstance.shippLastName shouldBe ("TODO")
        }

        // to test the property `shippAddress1` - Specifies first shipping address
        should("test shippAddress1") {
            // uncomment below to test the property
            //modelInstance.shippAddress1 shouldBe ("TODO")
        }

        // to test the property `shippCity` - Specifies shipping city
        should("test shippCity") {
            // uncomment below to test the property
            //modelInstance.shippCity shouldBe ("TODO")
        }

        // to test the property `shippPostcode` - Specifies shipping postcode
        should("test shippPostcode") {
            // uncomment below to test the property
            //modelInstance.shippPostcode shouldBe ("TODO")
        }

        // to test the property `shippCountry` - Specifies shipping country code
        should("test shippCountry") {
            // uncomment below to test the property
            //modelInstance.shippCountry shouldBe ("TODO")
        }

        // to test the property `orderItem`
        should("test orderItem") {
            // uncomment below to test the property
            //modelInstance.orderItem shouldBe ("TODO")
        }

        // to test the property `currencyId` - Currency Id
        should("test currencyId") {
            // uncomment below to test the property
            //modelInstance.currencyId shouldBe ("TODO")
        }

        // to test the property `storeId` - Store Id
        should("test storeId") {
            // uncomment below to test the property
            //modelInstance.storeId shouldBe ("TODO")
        }

        // to test the property `coupons` - Coupons that will be applied to order. If the order isn't eligible for any given discount code or there is no discount with such a code it will be skipped during calculation
        should("test coupons") {
            // uncomment below to test the property
            //modelInstance.coupons shouldBe ("TODO")
        }

        // to test the property `shippAddress2` - Specifies second address line of a shipping street address
        should("test shippAddress2") {
            // uncomment below to test the property
            //modelInstance.shippAddress2 shouldBe ("TODO")
        }

        // to test the property `shippState` - Specifies shipping state code
        should("test shippState") {
            // uncomment below to test the property
            //modelInstance.shippState shouldBe ("TODO")
        }

        // to test the property `shippCompany` - Specifies shipping company
        should("test shippCompany") {
            // uncomment below to test the property
            //modelInstance.shippCompany shouldBe ("TODO")
        }

        // to test the property `shippPhone` - Specifies shipping phone
        should("test shippPhone") {
            // uncomment below to test the property
            //modelInstance.shippPhone shouldBe ("TODO")
        }

        // to test the property `billFirstName` - Specifies billing first name
        should("test billFirstName") {
            // uncomment below to test the property
            //modelInstance.billFirstName shouldBe ("TODO")
        }

        // to test the property `billLastName` - Specifies billing last name
        should("test billLastName") {
            // uncomment below to test the property
            //modelInstance.billLastName shouldBe ("TODO")
        }

        // to test the property `billAddress1` - Specifies first billing address
        should("test billAddress1") {
            // uncomment below to test the property
            //modelInstance.billAddress1 shouldBe ("TODO")
        }

        // to test the property `billAddress2` - Specifies second billing address
        should("test billAddress2") {
            // uncomment below to test the property
            //modelInstance.billAddress2 shouldBe ("TODO")
        }

        // to test the property `billCity` - Specifies billing city
        should("test billCity") {
            // uncomment below to test the property
            //modelInstance.billCity shouldBe ("TODO")
        }

        // to test the property `billPostcode` - Specifies billing postcode
        should("test billPostcode") {
            // uncomment below to test the property
            //modelInstance.billPostcode shouldBe ("TODO")
        }

        // to test the property `billState` - Specifies billing state code
        should("test billState") {
            // uncomment below to test the property
            //modelInstance.billState shouldBe ("TODO")
        }

        // to test the property `billCountry` - Specifies billing country code
        should("test billCountry") {
            // uncomment below to test the property
            //modelInstance.billCountry shouldBe ("TODO")
        }

        // to test the property `billCompany` - Specifies billing company
        should("test billCompany") {
            // uncomment below to test the property
            //modelInstance.billCompany shouldBe ("TODO")
        }

        // to test the property `billPhone` - Specifies billing phone
        should("test billPhone") {
            // uncomment below to test the property
            //modelInstance.billPhone shouldBe ("TODO")
        }

        // to test the property `responseFields` - Set this parameter in order to choose which entity fields you want to retrieve
        should("test responseFields") {
            // uncomment below to test the property
            //modelInstance.responseFields shouldBe ("TODO")
        }

    }
}
