/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CustomerAddAddressInner

class CustomerAddAddressInnerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CustomerAddAddressInner
        //val modelInstance = CustomerAddAddressInner()

        // to test the property `addressBookType` - Specifies customer's address type
        should("test addressBookType") {
            // uncomment below to test the property
            //modelInstance.addressBookType shouldBe ("TODO")
        }

        // to test the property `addressBookFirstName` - Specifies customer's first name in the address book
        should("test addressBookFirstName") {
            // uncomment below to test the property
            //modelInstance.addressBookFirstName shouldBe ("TODO")
        }

        // to test the property `addressBookLastName` - Specifies customer's last name in the address book
        should("test addressBookLastName") {
            // uncomment below to test the property
            //modelInstance.addressBookLastName shouldBe ("TODO")
        }

        // to test the property `addressBookCompany` - Specifies customer's company name in the address book
        should("test addressBookCompany") {
            // uncomment below to test the property
            //modelInstance.addressBookCompany shouldBe ("TODO")
        }

        // to test the property `addressBookFax` - Specifies customer's fax in the address book
        should("test addressBookFax") {
            // uncomment below to test the property
            //modelInstance.addressBookFax shouldBe ("TODO")
        }

        // to test the property `addressBookPhone` - Specifies customer's phone number in the address book
        should("test addressBookPhone") {
            // uncomment below to test the property
            //modelInstance.addressBookPhone shouldBe ("TODO")
        }

        // to test the property `addressBookPhoneMobile` - Specifies customer's mobile phone number in the address book
        should("test addressBookPhoneMobile") {
            // uncomment below to test the property
            //modelInstance.addressBookPhoneMobile shouldBe ("TODO")
        }

        // to test the property `addressBookWebsite` - Specifies customer's website in the address book
        should("test addressBookWebsite") {
            // uncomment below to test the property
            //modelInstance.addressBookWebsite shouldBe ("TODO")
        }

        // to test the property `addressBookAddress1` - Specifies customer's first address in the address book
        should("test addressBookAddress1") {
            // uncomment below to test the property
            //modelInstance.addressBookAddress1 shouldBe ("TODO")
        }

        // to test the property `addressBookAddress2` - Specifies customer's second address in the address book
        should("test addressBookAddress2") {
            // uncomment below to test the property
            //modelInstance.addressBookAddress2 shouldBe ("TODO")
        }

        // to test the property `addressBookCity` - Specifies customer's city in the address book
        should("test addressBookCity") {
            // uncomment below to test the property
            //modelInstance.addressBookCity shouldBe ("TODO")
        }

        // to test the property `addressBookCountry` - ISO code or name of country
        should("test addressBookCountry") {
            // uncomment below to test the property
            //modelInstance.addressBookCountry shouldBe ("TODO")
        }

        // to test the property `addressBookState` - ISO code or name of state.
        should("test addressBookState") {
            // uncomment below to test the property
            //modelInstance.addressBookState shouldBe ("TODO")
        }

        // to test the property `addressBookPostcode` - Specifies customer's postcode
        should("test addressBookPostcode") {
            // uncomment below to test the property
            //modelInstance.addressBookPostcode shouldBe ("TODO")
        }

        // to test the property `addressBookGender` - Specifies customer's gender
        should("test addressBookGender") {
            // uncomment below to test the property
            //modelInstance.addressBookGender shouldBe ("TODO")
        }

        // to test the property `addressBookRegion` - Specifies customer's region
        should("test addressBookRegion") {
            // uncomment below to test the property
            //modelInstance.addressBookRegion shouldBe ("TODO")
        }

        // to test the property `addressBookDefault` - Defines whether the address is used by default
        should("test addressBookDefault") {
            // uncomment below to test the property
            //modelInstance.addressBookDefault shouldBe ("TODO")
        }

        // to test the property `addressBookTaxId` - Add Tax Id
        should("test addressBookTaxId") {
            // uncomment below to test the property
            //modelInstance.addressBookTaxId shouldBe ("TODO")
        }

        // to test the property `addressBookIdentificationNumber` - The national ID card number of this person, or a unique tax identification number.
        should("test addressBookIdentificationNumber") {
            // uncomment below to test the property
            //modelInstance.addressBookIdentificationNumber shouldBe ("TODO")
        }

        // to test the property `addressBookAlias` - Specifies customer's alias in the address book
        should("test addressBookAlias") {
            // uncomment below to test the property
            //modelInstance.addressBookAlias shouldBe ("TODO")
        }

    }
}
