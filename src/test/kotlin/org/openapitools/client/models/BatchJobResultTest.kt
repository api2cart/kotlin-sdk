/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.BatchJobResult
import org.openapitools.client.models.BatchJobResultItem

class BatchJobResultTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of BatchJobResult
        //val modelInstance = BatchJobResult()

        // to test the property `jobId`
        should("test jobId") {
            // uncomment below to test the property
            //modelInstance.jobId shouldBe ("TODO")
        }

        // to test the property `jobName`
        should("test jobName") {
            // uncomment below to test the property
            //modelInstance.jobName shouldBe ("TODO")
        }

        // to test the property `itemsProcessed`
        should("test itemsProcessed") {
            // uncomment below to test the property
            //modelInstance.itemsProcessed shouldBe ("TODO")
        }

        // to test the property `itemsSucceed`
        should("test itemsSucceed") {
            // uncomment below to test the property
            //modelInstance.itemsSucceed shouldBe ("TODO")
        }

        // to test the property `items`
        should("test items") {
            // uncomment below to test the property
            //modelInstance.items shouldBe ("TODO")
        }

        // to test the property `additionalFields`
        should("test additionalFields") {
            // uncomment below to test the property
            //modelInstance.additionalFields shouldBe ("TODO")
        }

        // to test the property `customFields`
        should("test customFields") {
            // uncomment below to test the property
            //modelInstance.customFields shouldBe ("TODO")
        }

    }
}
